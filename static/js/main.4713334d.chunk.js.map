{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/InputTodo.js","components/Header.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","todos","map","key","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","Header","isInitialMount","useRef","console","log","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","marginBottom","TodoContainer","prop","setTodos","show","setShow","axios","get","then","response","data","newTodo","uuidv4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.4713334d.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nconst TodoItem = (props) => {\n  //componentWillUnmount() {\n  // alert('Item about to be deleted!');\n  //}\n\n  //  render() {\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#d35e0f',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n  const { completed, id, title } = props.todo;\n\n  useEffect(() => {\n    return () => {\n      alert('Item about to be deleted!');\n    };\n  }, []);\n\n  return (\n    <li className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => props.handleChangeProps(id)}\n      />\n      <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\n      <span style={completed ? completedStyle : null}>{title}</span>\n    </li>\n  );\n};\n//}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodosList = (props) => {\n  // render() {\n  return (\n    <div>\n      {props.todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps}\n        />\n      ))}\n    </div>\n  );\n};\n//}\nexport default TodosList;\n","import React, { useState } from 'react';\n\nconst InputTodo = (props) => {\n    const [inputText, setInputText] = useState({\n        title: \"\",\n      })\n\n      const onChange = e => {\n        setInputText({\n          ...inputText,\n          [e.target.name]: e.target.value,\n        })\n      }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.addTodoProps(inputText.title);\n    setInputText({\n        title: \"\",\n      })\n  };\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\n    </form>\n  );\n};\n\n// class InputTodo extends Component {\n//   state = {\n//     title: '',\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.addTodoProps(this.state.title);\n//     this.setState({\n//       title: '',\n//     });\n//   };\n\n//   onChange = (e) => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit} className=\"form-container\">\n//         <input\n//           className=\"input-text\"\n//           type=\"text\"\n//           placeholder=\"Add Todo..\"\n//           onChange={this.onChange}\n//           value={this.state.title}\n//           name=\"title\"\n//         />\n//         <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\n//       </form>\n//     );\n//   }\n// }\n\nexport default InputTodo;\n","import React, { useEffect, useRef } from 'react';\n\nconst Header = (props) => {\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.headerSpan !== this.props.headerSpan) {\n  const isInitialMount = useRef(true);\n  console.log(isInitialMount);\n  useEffect(() => {\n    var x = Math.floor(Math.random() * 256);\n    var y = Math.floor(Math.random() * 256);\n    var z = Math.floor(Math.random() * 256);\n    var bgColor = 'rgb(' + x + ',' + y + ',' + z + ')';\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      document.getElementById('inH1').innerHTML = 'clicked';\n      document.getElementById('inH1').style.backgroundColor = bgColor;\n    }\n  }, [props.headerSpan]);\n  //   }\n  // }\n\n  //  render() {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '2em',\n  };\n\n  return (\n    <header style={headerStyle}>\n      <h1 style={{ fontSize: '25px', marginBottom: '15px' }}>\n        Simple Todo App <span id=\"inH1\"></span>\n      </h1>\n      <p style={{ fontSize: '19px' }}>\n        Please add to-dos item(s) through the input field\n      </p>\n    </header>\n  );\n};\n//}\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nimport TodosList from './TodosList';\nimport InputTodo from './InputTodo';\nimport Header from './Header';\n\nconst TodoContainer = (prop) => {\n  const [todos, setTodos] = useState([]);\n  const [show, setShow] = useState(false);\n\n  const handleChange = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n    setShow(!show);\n  };\n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => {\n        return todo.id !== id;\n      }),\n    ]);\n    // axios\n    //   .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    //   .then((reponse) =>\n    //     this.setState({\n    //       todos: [\n    //         ...this.state.todos.filter((todo) => {\n    //           return todo.id !== id;\n    //         }),\n    //       ],\n    //     })\n    //   );\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    };\n    setTodos({\n      todos: [...todos, newTodo],\n    });\n\n    // axios\n    //   .post('https://jsonplaceholder.typicode.com/todos', {\n    //     title: title,\n    //     completed: false,\n    //   })\n    //   .then((response) =>\n    //     this.setState({\n    //       todos: [...this.state.todos, response.data],\n    //     })\n    //   );\n  };\n\n  // componentDidMount() {\n  //   axios\n  //     .get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n  //     .then((response) => this.setState({ todos: response.data }));\n  // }\n\n  useEffect(() => {\n    console.log('test run');\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then((response) => setTodos(response.data));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header headerSpan={show} />\n      <InputTodo addTodoProps={addTodoItem} />\n      <TodosList\n        todos={todos}\n        handleChangeProps={handleChange}\n        deleteTodoProps={delTodo}\n      />\n    </div>\n  );\n};\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TodoContainer from './components/TodoContainer';\nimport './App.css';\nReactDOM.render(<TodoContainer />, document.getElementById('root'));\n"],"sourceRoot":""}